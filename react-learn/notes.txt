PROPS:

Props / Properties are arguments passed into React components.

Props allows us to pass data from parent component to a child component

Props are passed to components via HTML attributes.




CONDITIONAL RENDERING:

Conditional rendering allows us to dynamically display different UI components or content based on specific conditions. This enables us to create more interactive and responsive user experiences


------## State ##-----
State is a way to "store and manage" data that can change over
time and affects how the component renders. We define state
using the useState Hook, which allows you to set an initial
value and provides a way to update that state.


-----## HOOKS ##-----
Hooks are a new addition in React 16.8
They let you use state and other React features
without writing a class.


-----## useState() ##-----
useState Hook allows us to "track state" in a
functional component. State generally refers
to data or properties that need to be
tracking in an application.




const [data, changeData] = useState()
        ðŸ‘†        ðŸ‘†
   InitialValue ChangeValue






-----## useEffect() ##-----

useEffect Hook allows you to perform side effects in
your components. Some examples of side effects
are: fetching data, directly updating the DOM etc.


        ###  Context API ###
Context API is a feature that allows you to manage and
share state across your component tree without having to
pass props down manually at every level. It's useful for
scenarios where you need to share data or functions
across many components, especially when these
components are deeply nested.

##########  useContext() #########
useContext Hook allows us to access the context values
provided by a Context object directly within a functional
component. Context provides a way to pass data through
the component tree without having to pass props down
manually at every level.


     ### useReducer() ###
useReducer is a hook that is similar to useState,
but it is designed for more complex state objects
or state transitions that involves multiple sub-
values. It allows you to manage state in a
functional. Immutable way. 